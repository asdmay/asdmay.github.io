{"version":3,"sources":["Title.js","Works.js","News.js","Profile.js","Links.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","react_default","a","createElement","title","works","description","img","Works","src_Title","Component","News","Profile","Links","className","href","target","rel","App","src_Works","src_News","src_Profile","src_Links","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAQeA,MANf,SAAeC,GACb,OACAC,EAAAC,EAAAC,cAAA,UAAKH,EAAMI,QCDPC,EAAQ,CACZ,CACED,MAAO,OACPE,YAAa,uCACbC,IAAK,cAEP,CACEH,MAAO,OACPE,YAAa,uCACbC,IAAK,eAwBMC,mLAlBX,OACEP,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACM,EAAD,CAAOL,MAAM,UACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKE,EAAM,GAAGD,OACdH,EAAAC,EAAAC,cAAA,SAAIE,EAAM,GAAGC,cAEfL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKE,EAAM,GAAGD,OACdH,EAAAC,EAAAC,cAAA,SAAIE,EAAM,GAAGC,uBAZPI,aCGLC,mLAdX,OACEV,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACM,EAAD,CAAOL,MAAM,SACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,kCARKO,aCYJE,mLAVX,OACEX,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACM,EAAD,CAAOL,MAAM,YACZH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,wCANaO,aC0CPG,mLAxCX,OACEZ,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACM,EAAD,CAAOL,MAAM,UACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEW,UAAU,aACVC,KAAK,yCACLC,OAAO,SACPC,IAAI,uBAJN,aASFhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEW,UAAU,aACVC,KAAK,uBACLC,OAAO,SACPC,IAAI,uBAJN,YASFhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEW,UAAU,aACVC,KAAK,4BACLC,OAAO,SACPC,IAAI,uBAJN,uBA3BQP,aCiBLQ,0LAXX,OACEjB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACbb,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACmB,EAAD,cAPUZ,cCKEa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECZNC,IAASC,OACP5B,EAAAC,EAAAC,cAAC2B,EAAD,MACAC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.25df1037.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Title(props) {\n  return(\n  <h1>{props.title}</h1>\n  );\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport Title from './Title';\n\nconst works = [\n  {\n    title: 'hoge',\n    description: 'もにゃもにゃ',\n    img: 'sample.png'\n  },\n  {\n    title: 'fuga',\n    description: 'もにゃもにゃ',\n    img: 'sample.png'\n  }\n];\n\nclass Works extends Component {\n  render() {\n    return (\n      <section>\n        <Title title=\"Works\" />\n        <ul>\n            <li>\n              <h2>{works[0].title}</h2>\n              <p>{works[0].description}</p>\n            </li>\n            <li>\n              <h2>{works[1].title}</h2>\n              <p>{works[1].description}</p>\n            </li>\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default Works;\n","import React, { Component } from 'react';\nimport Title from './Title';\n\nclass News extends Component {\n  render(){\n    return (\n      <section>\n        <Title title=\"News\" />\n        <ul>\n            <li>\n              <h2>newsだよ</h2>\n              <time>2019.1.2</time>\n            </li>\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default News;\n","import React, { Component } from 'react';\nimport Title from './Title';\n\nclass Profile extends Component {\n  render(){\n    return (\n      <section>\n        <Title title=\"Profile\" />\n         <h2>Maaya Ashida</h2>\n         <p>profileだよ</p>\n      </section>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport Title from './Title';\n\nclass Links extends Component {\n  render(){\n    return (\n      <section>\n        <Title title=\"Links\" />\n        <ul>\n          <li>\n            <a\n              className=\"Links-link\"\n              href=\"https://www.facebook.com/?locale=ja_JP\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              FaceBook\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"Links-link\"\n              href=\"https://twitter.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Twitter\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"Links-link\"\n              href=\"https://www.instagram.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n             Instagram \n            </a>\n          </li>\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default Links;\n","import React, { Component } from 'react';\nimport Works from './Works';\nimport News from './News';\nimport Profile from './Profile';\nimport Links from './Links';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Works />\n        <News />\n        <Profile />\n        <Links />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'ress';\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}